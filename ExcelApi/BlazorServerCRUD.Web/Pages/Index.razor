@page "/"
@using BlazorServerCRUD.Web.Data;
@using Context
@using Controllers
@using Microsoft.AspNetCore
@inject BlazorServerCRUD.Web.IRepository.IJobsRepository jobRepo;
@using Microsoft.AspNetCore.Http
@using Repository
@using Syncfusion.Blazor.Inputs
@using System.IO
@using static System.IO.FileInfo
@inject DatabaseContext DbService
@using System.Threading;


<SfUploader ID = "UploadFiles">
    <UploaderAsyncSettings SaveUrl = "api/JobAdvertisement/Save" RemoveUrl="api/JobAdvertisement/Remove" ChunkSize="500000">

      
    </UploaderAsyncSettings> 
</SfUploader>


<!-- Editable table -->
<div class="card">
  <h3 class="card-header text-center font-weight-bold text-uppercase py-4">
    Welcome Excel table
  </h3>
  <div class="card-body">
    <div id="table" class="table-editable">
      <span class="table-add float-right mb-3 mr-2">
        <a href="#!" class="text-success">
          <i class="fas fa-plus fa-2x" aria-hidden="true"></i>
        </a>
      </span>
      <table
        class="table table-bordered table-responsive-md table-striped text-center"
      >
        <thead>
          <tr>
            <th class="text-center"> WorkForm </th>
            <th class= "text-center"> Gender</th>
            <th class= "text-center"> Qualification</th>
            <th class= "text-center"> UniversityDep</th>
            <th class= "text-center"> Country</th>
            <th class= "text-center"> Category</th>
            <th class= "text-center"> Department</th>
            <th class= "text-center"> Page</th>
            <th class= "text-center"> Company</th>
            <th class= "text-center"> ReleaseDate</th>
            <th class= "text-center"> NumberOfPerson</th>
            <th class= "text-center"> MilitaryStatus</th>
            <th class= "text-center"> Age</th>
            <th class= "text-center"> Experience</th>
            <th class= "text-center"> ForeignLang</th>
            <th class= "text-center"> ApplicationDate</th>
            <th class= "text-center"> EducationLevel</th>
            <th class= "text-center"> Sector</th>
            <th class= "text-center"> AdvNumber</th>
            <th class= "text-center"> UpdatedDate</th>
            <th class= "text-center"> Position</th>
            <th class= "text-center"> Site</th>
            <th class= "text-center"> Salary</th>
            <th class= "text-center"> PositionLevel</th>
          </tr>
        </thead>
        <tbody>
        @if(job!= null){
            @foreach (var JobAdvertisement in jobs) {
                <tr>
                    <td class="pt-3-half"> @JobAdvertisement.WorkForm </td>
                    <td class="pt-3-half"> @JobAdvertisement.Gender</td>
                    <td class="pt-3-half"> @JobAdvertisement.Qualification</td>
                    <td class="pt-3-half"> @JobAdvertisement.UniversityDep</td>
                    <td class="pt-3-half"> @JobAdvertisement.Country</td>
                    <td class="pt-3-half"> @JobAdvertisement.Category</td>
                    <td class="pt-3-half"> @JobAdvertisement.Department</td>
                    <td class="pt-3-half"> @JobAdvertisement.Page</td>
                    <td class="pt-3-half"> @JobAdvertisement.Company</td>
                    <td class="pt-3-half"> @JobAdvertisement.ReleaseDate</td>
                    <td class="pt-3-half"> @JobAdvertisement.NumberOfPerson</td>
                    <td class="pt-3-half"> @JobAdvertisement.MilitaryStatus</td>
                    <td class="pt-3-half"> @JobAdvertisement.Age</td>
                    <td class="pt-3-half"> @JobAdvertisement.Experience</td>
                    <td class="pt-3-half"> @JobAdvertisement.ForeignLang</td>
                    <td class="pt-3-half"> @JobAdvertisement.ApplicationDate</td>
                    <td class="pt-3-half"> @JobAdvertisement.EducationLevel</td>
                    <td class="pt-3-half"> @JobAdvertisement.Sector</td>
                    <td class="pt-3-half"> @JobAdvertisement.AdvNumber</td>
                    <td class="pt-3-half"> @JobAdvertisement.UpdatedDate</td>
                    <td class="pt-3-half"> @JobAdvertisement.Position</td>
                    <td class="pt-3-half"> @JobAdvertisement.Site</td>
                    <td class="pt-3-half"> @JobAdvertisement.Salary</td>
                    <td class="pt-3-half"> @JobAdvertisement.PositionLevel</td>
                </tr>
            }
        }
        </tbody>
      </table>
    </div>
  </div>
</div>


<button class="btn btn-primary" @onclick ="SaveExcelInfo" >Save</button>

<button class="btn btn-danger" type="button" @onclick="Delete_Click">
    Delete
</button>

@code{
    JobAdvertisement job = new JobAdvertisement();
    List<JobAdvertisement> jobs = new List<JobAdvertisement>();
    private void SaveExcelInfo(){
        DirectoryInfo d = new DirectoryInfo($"{Directory.GetCurrentDirectory()}{@"\wwwroot\files"}");
        var fileName  = d.GetFiles("*.xlsx");
        try{
          string FileName = Path.GetFileName(fileName[0].ToString());
          jobs = jobRepo.SaveExcel(FileName);
        }
        catch(IndexOutOfRangeException e)
        {
            // FileNotFoundExceptions are handled here.
            Console.WriteLine(e.Message);
            
        }
    }

    private void Delete_Click()
    {
      @inject NavigationManager NavigationManager;

      var jobs = jobRepo.Delete();

      NavigationManager.NavigateTo("/", true);
        
    }

}


